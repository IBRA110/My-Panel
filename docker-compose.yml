version: '3.9'

services:
  database:
    image: mysql:8.0.22
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE} 
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
  
  web:
    build: 
      context: ./backend
      dockerfile: dockerfile
    ports:
      - "5000:80"
    depends_on:
      - database
      - angular
    environment:
      - ASPNETCORE_URLS=http://+:80
      - DBHOST=database
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - frontend
      - backend
  
  angular:
    build: 
      context: ./frontend
      dockerfile: dockerfile
    ports:
      - "4200:4200"
    environment:
      - NG_SERVE_HOST=0.0.0.0
    networks:
      - frontend

  nginx:
    build: 
      context: ./server
      dockerfile: dockerfile
    ports:
      - "8080:80"
    depends_on:
      - web
    networks:
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
  
  
  dotnet-certbot:
    image: certbot/certbot
    container_name: dotnet-certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h &
      wait $${!}; done;'"

networks:
  frontend:
  backend: